{
    "name": "airdrop-universal",
    "version": "1.0.0",
    "private": true,
    "main": "electron/index.js",
    "dependencies": {
        "@heroicons/react": "^2.0.18",
        "buffer": "^6.0.3",
        "cors": "^2.8.5",
        "express": "^4.21.2",
        "jszip": "^3.10.1",
        "peer": "0.6.1",
        "peerjs": "^1.5.4",
        "qrcode": "^1.5.4",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-icons": "^5.5.0",
        "react-qrcode-logo": "^3.0.0",
        "react-scripts": "5.0.1",
        "simple-peer": "^9.11.1",
        "socket.io": "^4.8.1",
        "socket.io-client": "^4.7.2",
        "tailwindcss": "^3.3.0",
        "ws": "^8.18.1"
    },
    "scripts": {
        "prestart": "sh -c 'lsof -t -i:3000 | xargs -r kill -9'",
        "start": "HOST=0.0.0.0 react-scripts start",
        "preserver": "sh -c 'lsof -t -i:3001 | xargs -r kill -9 && lsof -t -i:9000 | xargs -r kill -9'",
        "server": "node server.js",
        "clean-start": "sh kill-and-run.sh start",
        "clean-server": "sh kill-and-run.sh server",
        "kill-all": "./kill-processes.sh",
        "build": "react-scripts build",
        "test": "react-scripts test",
        "eject": "react-scripts eject",
        "electron": "electron .",
        "electron-dev": "node scripts/electron-starter.js",
        "electron-dev-uncompressed": "GENERATE_SOURCEMAP=true BABEL_ENV=development NODE_ENV=development node scripts/electron-starter.js",
        "prebuild-electron": "npm run build",
        "build-electron": "electron-builder",
        "build-electron-all": "electron-builder -mwl",
        "prebuild-electron-mac": "npm run build",
        "build-electron-mac": "electron-builder -m",
        "prebuild-electron-win": "npm run build",
        "build-electron-win": "electron-builder -w",
        "prebuild-electron-linux": "npm run build",
        "build-electron-linux": "electron-builder -l",
        "build-dmg": "./fix-build.sh",
        "dev": "./start-dev.sh"
    },
    "eslintConfig": {
        "extends": [
            "react-app",
            "react-app/jest"
        ]
    },
    "browserslist": {
        "production": [
            ">0.2%",
            "not dead",
            "not op_mini all"
        ],
        "development": [
            "last 1 chrome version",
            "last 1 firefox version",
            "last 1 safari version"
        ]
    },
    "devDependencies": {
        "concurrently": "^8.2.2",
        "electron": "^29.1.0",
        "electron-builder": "^24.13.1",
        "semver": "^7.7.1",
        "wait-on": "^7.2.0"
    },
    "build": {
        "appId": "com.airdrop.universal",
        "productName": "AirDrop Universal",
        "files": [
            "build/**/*",
            "electron/**/*",
            "server.js",
            "package.json",
            "node_modules/**/*",
            "electron.js"
        ],
        "extraResources": [
            {
                "from": "node_modules",
                "to": "node_modules",
                "filter": [
                    "express/**/*",
                    "cors/**/*",
                    "socket.io/**/*",
                    "socket.io-client/**/*",
                    "peer/**/*",
                    "peerjs/**/*",
                    "ws/**/*"
                ]
            }
        ],
        "directories": {
            "buildResources": "public",
            "output": "dist"
        },
        "mac": {
            "target": [
                "dir",
                "dmg"
            ],
            "category": "public.app-category.utilities",
            "hardenedRuntime": false,
            "gatekeeperAssess": false,
            "entitlements": null,
            "entitlementsInherit": null,
            "artifactName": "${productName}-${version}-${arch}.${ext}",
            "identity": null,
            "type": "development",
            "electronLanguages": [
                "zh_CN"
            ],
            "darkModeSupport": true,
            "notarize": false
        },
        "win": {
            "target": [
                "nsis"
            ]
        },
        "linux": {
            "target": [
                "AppImage"
            ],
            "category": "Utility"
        },
        "asar": false,
        "asarUnpack": [
            "node_modules/express/**/*",
            "node_modules/cors/**/*",
            "node_modules/socket.io/**/*",
            "node_modules/peer/**/*"
        ],
        "afterSign": null,
        "electronVersion": "29.1.0"
    }
}